name: deploy

on:
  push:
    tags:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare SSH directory
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Populate known_hosts from Secret
        run: |
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Add SSH key to agent
        run: |
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_ed25519

      - name: Test SSH connection
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no deploy@bokko.kr "echo 'SSH connection successful'"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: bokko.kr
          port: 22
          username: deploy
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e
            cd ~/borikkori/secret
            git pull origin main
            # GPG로 암호화된 파일 복호화
            gpg --batch --yes --passphrase "${{ secrets.GPG_PASSPHRASE }}" --decrypt .env.release.gpg > .env.release
            chmod 600 .env.release
            docker-compose -f docker-compose.release.yml pull
            docker-compose -f docker-compose.release.yml up -d
            docker-compose -f docker-compose.release.yml ps
            # 보안을 위해 복호화된 파일 삭제 (선택 사항)
            rm .env.release
